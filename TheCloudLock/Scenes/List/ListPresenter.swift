//
//  ListPresenter.swift
//  TheCloudLock
//
//  Created by Matheus Vasconcelos on 24/01/20.
//  Copyright (c) 2020 AppCompany. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListPresentationLogic {
    func presentFetchedItems(response: List.FetchItems.Response)
    func presentFetchedCredentials(response: List.FetchItemCredentials.Response)
}

class ListPresenter: ListPresentationLogic {
    
    weak var viewController: ListDisplayLogic?
    
    // MARK: - Present Fetched Items
    
    func presentFetchedItems(response: List.FetchItems.Response) {
        let viewModel = format(response: response)
        viewController?.displayFetchedItems(viewModel: viewModel)
        
    }
    
    // MARK: - Present Fetched Credentials
    
    func presentFetchedCredentials(response: List.FetchItemCredentials.Response) {
        let viewModel = List.FetchItemCredentials.ViewModel(resultMessage: getErrorMessage(from: response.error))
        viewController?.displayFetchedCredentials(viewModel: viewModel)
    }
    
    private func format(response: List.FetchItems.Response) -> List.FetchItems.ViewModel {
        return List.FetchItems.ViewModel(
            items: response.items.map({ DisplayedItem(id: $0.id, name: $0.name) }),
            resultMessage: getErrorMessage(from: response.error)
        )
    }
    
    // MARK: - Shared Helpers
    
    private func getErrorMessage(from error: CloudLockError?) -> String {
        guard let error = error else {
            return String()
        }
        
        switch error {
            
        case .cannotFetchItems:
            return R.string.localizable.cantFindItemsError()
        case .cannotFetchCredentials:
            return R.string.localizable.somethingWrong()
        default:
            return R.string.localizable.unkownError()
        }
    }
}
