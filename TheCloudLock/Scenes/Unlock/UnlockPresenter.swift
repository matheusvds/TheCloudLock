//
//  UnlockPresenter.swift
//  TheCloudLock
//
//  Created by Matheus Vasconcelos on 18/01/20.
//  Copyright (c) 2020 AppCompany. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UnlockPresentationLogic {
    func presentFetchDoors(response: Unlock.FetchDoors.Response)
    func presentFetchDoors(error: UnlockError)
}

class UnlockPresenter: UnlockPresentationLogic {
    
    weak var viewController: UnlockDisplayLogic?
    
    // MARK: UnlockPresentationLogic
    
    func presentFetchDoors(response: Unlock.FetchDoors.Response) {
        let viewModel = convert(response: response)
        viewController?.displayFetchDoors(viewModel: viewModel)
    }
    
    func presentFetchDoors(error: UnlockError) {
        let viewModel = convertError(error: error)
        viewController?.displayFetchDoors(viewModel: viewModel)

    }
    
    // MARK: Helper Methods
    
    func convert(response: Unlock.FetchDoors.Response) -> Unlock.FetchDoors.ViewModel {
        
        return Unlock.FetchDoors.ViewModel(state: .initialSuccess,
                                            doorImage: getImage(from: response),
                                            doorName: response.name ?? String())
    }
    
    func convertError(error: UnlockError) -> Unlock.FetchDoors.ViewModel {
        return Unlock.FetchDoors.ViewModel(state: .initialSuccess,
                                            doorImage: UIImage(),
                                            doorName: String())
    }
    
    private func getImage(from response: Unlock.FetchDoors.Response) -> UIImage? {
        
        guard let image = response.image else {
            return nil
        }
        
        switch image {
        case "hallway":
            return R.image.hallway()
        case "office":
            return R.image.office()
        case "livingroom":
            return R.image.livingroom()
        
        default:
            return nil
        }
    }
}
